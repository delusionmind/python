Demonstrate creating objects and inheritance


Creating Objects:


# Define a class
class Person:
    # Constructor
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    # Method to display information
    def display_info(self):
        print(f"Name: {self.name}, Age: {self.age}")

# Create an object of the Person class
person1 = Person("Alice", 30)

# Call the display_info method of the object
person1.display_info()



Inheritance:


# Define a base class
class Animal:
    def __init__(self, name):
        self.name = name
    
    def speak(self):
        raise NotImplementedError("Subclass must implement abstract method")

# Define a subclass inheriting from Animal
class Dog(Animal):
    def speak(self):
        return f"{self.name} says Woof!"

# Define another subclass inheriting from Animal
class Cat(Animal):
    def speak(self):
        return f"{self.name} says Meow!"

# Create objects of the subclasses
dog = Dog("Buddy")
cat = Cat("Whiskers")

# Call the speak method of the objects
print(dog.speak())  # Output: Buddy says Woof!
print(cat.speak())  # Output: Whiskers says Meow!
